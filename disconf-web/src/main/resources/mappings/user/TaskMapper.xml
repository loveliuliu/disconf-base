<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.baidu.disconf.web.service.task.dao.TaskMapper">


	<sql id="columns">
		t.task_id as id,
		t.app_id as appId,
		t.app_name as appName,
		t.env_id as envId,
		t.env_name as envName,
		t.version as version,
		t.audit_status as auditStatus,
		t.create_user_id as createUserId,
		t.create_time as createTime,
		t.audit_user_id as auditUserId,
		t.audit_time as auditTime,
		t.audit_comment as auditComment,
		t.exec_time as execTime,
		t.exec_status as execStatus,
		t.memo as memo
	</sql>

	<sql id="dynamicWhere">
		<where>
			<if test="task.id !=null "> AND t.task_id = #{task.id} </if>
			<if test="task.appId !=null "> AND t.app_id = #{task.appId} </if>
			<if test="task.appName !=null and task.appName !='' "> AND t.app_name like CONCAT('%',#{task.appName},'%' )  </if>
			<if test="task.version !=null "> AND t.version like CONCAT('%',#{task.version},'%' ) </if>
			<if test="task.envId !=null "> AND t.env_id = #{task.envId} </if>
			<if test="task.envName !=null "> AND t.env_name like CONCAT('%',#{task.envName},'%' ) </if>
			<if test="task.auditStatus !=null "> AND t.audit_status = #{task.auditStatus} </if>
			<if test="task.createUserId !=null "> AND t.create_user_id = #{task.createUserId} </if>
			<if test="task.createTime !=null "> AND t.create_time = #{task.createTime} </if>
			<if test="task.auditUserId !=null "> AND t.audit_user_id = #{task.auditUserId} </if>
			<if test="task.auditTime !=null "> AND t.audit_time = #{task.auditTime} </if>
			<if test="task.auditComment !=null "> AND t.audit_comment = #{task.auditComment} </if>
			<if test="task.execTime !=null "> AND t.exec_time = #{task.execTime} </if>
			<if test="task.execStatus !=null "> AND t.exec_status = #{task.execStatus} </if>
			<if test="task.memo !=null "> AND t.memo = #{task.memo} </if>
		</where>
	</sql>


    <select id="findByTask"  resultType="Task">
        SELECT <include refid="columns"/>
        FROM task t
        <include refid="dynamicWhere"/>
    </select>


	<!-- 我提交的任务列表  -->
	<select id="findMySubmitTask"  resultType="TaskDto">
		SELECT <include refid="columns"/>,
		CONCAT_WS(',',IFNULL(audit.curAuditUserIds ,''),ifnull(au.dbaAuditUserIds,'')) as curAuditUserIds,
		CONCAT_WS(',',IFNULL(audit.curAuditUserNames,''),IFNULL(au.dbaAuditUserNames,'')) as curAuditUserNames
		FROM task t
		LEFT JOIN (
		SELECT
		ua.app_id,
		GROUP_CONCAT(DISTINCT u.user_id) AS curAuditUserIds,
		GROUP_CONCAT(DISTINCT u. NAME) AS curAuditUserNames
		FROM
		user_app ua,USER u
		WHERE ua.user_id = u.user_id GROUP BY ua.app_id
		) audit
		ON audit.app_id = t.app_id

		LEFT JOIN (
		SELECT au.* ,dbaUser.* from task_audit au ,(SELECT
		GROUP_CONCAT(DISTINCT u.user_id) AS dbaAuditUserIds,
		GROUP_CONCAT(DISTINCT u.NAME) AS dbaAuditUserNames
		from user u group by u.role_id HAVING u.role_id = 4) dbaUser where au.audit_type = 'DBA'
		) au on au.task_id = t.task_id
		<where>
			t.create_user_id = #{task.curUserId}
			AND t.audit_status = 'wait_audit'
			<include refid="taskWhere"/>
		</where>

	</select>

	<!-- 我的待办任务  -->
	<select id="findMyToDoTask"  resultType="TaskDto">
		select * from (
		SELECT <include refid="columns"/>, u. NAME AS createUserName,au.id as taskAuditId
		FROM task t,(
				SELECT
				app_id
				FROM
				user_app
				WHERE
				user_id = #{task.curUserId}
				AND type = 'auditor'
			) ua, USER u,task_audit au
		<where>
			t.app_id = ua.app_id
			AND u.user_id = t.create_user_id
			AND t.task_id = au.task_id
			AND au.audit_type = 'AUDITOR'
			and au.audit_status = 'wait_audit'
			AND t.audit_status = 'wait_audit'
			<include refid="taskWhere"/>
		</where>

		UNION
		SELECT <include refid="columns"/>, u. NAME AS createUserName,au.id as taskAuditId
		FROM task t, USER u,task_audit au,user u1
		<where>
			u.user_id = t.create_user_id
		    AND t.task_id = au.task_id
			and au.audit_type = 'DBA'
			and au.audit_status = 'wait_audit'
			and u1.role_id = 4
			and u1.user_id = #{task.curUserId}
			AND u.user_id = t.create_user_id
			AND t.audit_status = 'wait_audit'
			<include refid="taskWhere"/>
		</where>
		) myTodoTask
	</select>

	<!-- 我的已办任务  -->
	<select id="findMyDoneTask"  resultType="TaskDto">
		SELECT <include refid="columns"/>, u. NAME AS createUserName,au.audit_status as myAuditStatus
		FROM task t,USER u,task_audit au
		<where>
			t.create_user_id = u.user_id
			and t.task_id = au.task_id
			AND t.audit_status IN ('pass', 'fail','wait_audit')
			and au.audit_status IN ('pass', 'fail')
			AND au.audit_user_id = #{task.curUserId}
			<include refid="taskWhere"/>
		</where>
	</select>

	<!-- 已完成的任务  -->
	<select id="findToBeActiveTask"  resultType="Task">
		SELECT <include refid="columns"/>
		FROM task t WHERE
		<![CDATA[
			t.audit_status = #{task.auditStatus}
			and t.exec_status = #{task.execStatus}
			and (t.exec_time <= #{task.execTime} OR t.exec_time = 'now')
		]]>
	</select>

	<update id="updateTaskExecStatusById">
		UPDATE task t set t.exec_status = #{task.execStatus}
		WHERE t.task_id = #{task.id}
	</update>

	<select id="findMyFinishedTask"  resultType="TaskDto">
		SELECT <include refid="columns"/>,
		(
			SELECT
			GROUP_CONCAT(NAME)
			FROM USER WHERE
			user_id IN (
				SELECT
				audit_user_id
				FROM
				task_audit
				WHERE
				task_id = t.task_id
				AND audit_user_id IS NOT NULL
			)
		) as auditUserName
		FROM task t
		<where>
		   t.audit_status != 'wait_audit'
			AND t.create_user_id = #{task.curUserId}
			<include refid="taskWhere"/>
		</where>
	</select>


	<sql id="taskWhere">
		<if test="task.id !=null "> AND t.task_id = #{task.id} </if>
		<if test="task.appId !=null "> AND t.app_id = #{task.appId} </if>
		<if test="task.appName !=null and task.appName !='' "> AND t.app_name like CONCAT('%',#{task.appName},'%' )  </if>
		<if test="task.version !=null "> AND t.version like CONCAT('%',#{task.version},'%' ) </if>
		<if test="task.envId !=null "> AND t.env_id = #{task.envId} </if>
		<if test="task.envName !=null "> AND t.env_name like CONCAT('%',#{task.envName},'%' ) </if>
	</sql>

	<select id="findAuditingOrNotExecTask"  resultType="Task">
		SELECT <include refid="columns"/>
		FROM task t
		where (t.audit_status = 'wait_audit' or (t.audit_status = 'pass' and t.exec_status='wait'))
		<if test="task.appId !=null "> AND t.app_id = #{task.appId} </if>
		<if test="task.envId !=null "> AND t.env_id = #{task.envId} </if>
		<if test="task.version !=null "> AND t.version = #{task.version}</if>
	</select>


	<select id="findTaskAuditDtoByTaskId" resultType="TaskAuditDto">
		select
		ta.id as id,ta.task_id as taskId,ta.audit_user_id as auditUserId,ta.audit_time as auditTime,ta.audit_comment as auditComment,
		ta.audit_status as auditStatus,
		u.name as auditUserName
		 from task_audit ta,user u where ta.audit_user_id = u.user_id and ta.task_id = #{taskId}
	</select>


</mapper>
